"""
Бот для чата Discordapp.com 0.3
-------
Бот создан для конференции https://discordapp.com/invite/0ZHIuxMKFLgwjRuD
Буду постепенно выкладывать свои версии бота, начиная с самой старой
Если необходимы подробные комментарии, пишите в ЛС (если это здесь возможно), либо в Issues
"""

import discord
import requests, re
from bs4 import BeautifulSoup

client = discord.Client()
client.login('testuser', 'testpass') # Вводим свои данные для подключения к серверу Discordapp.com
ServerID="101868866954604544"
ChannelID="101868866954604544"
msg = "test"

def payload_template(board,thread,comment,captcha_type='',chaptcha_id='',chaptcha_value=''):
        payload = {
                'json':('','1'),
                'task':('','post'),
                'board':('',board),
                'thread':('',thread),
                'captcha_type':('',captcha_type),
                'email':('',''),
                'name':('',''),
                'subject':('',''),
                'comment':('',comment),
                '2chaptcha_id':('',chaptcha_id),
                '2chaptcha_value':('',chaptcha_value),        
                'image':(imgname, open(img_path, 'rb'), 'image/'+img_ext)
                }
        return payload

def post_thread():
        with requests.Session() as s:
                rc = s.get('https://2ch.hk/makaba/captcha.fcgi?type=2chaptcha&board=b')
                rci_data = {'type':'2chaptcha', 'action':'image', 'id':'%s' % (rc.content[6:].decode('utf-8'))}
                rci = s.get('https://2ch.hk/makaba/captcha.fcgi?type=2chaptcha&action=image&id=%s' % (rc.content[6:].decode('utf-8')), data=rci_data)
                with open('D:/Downloads/1.png', 'wb') as f:
                        client.send_message(message.channel, get_news(news_num))
                r = s.post('https://2ch.hk/makaba/posting.fcgi', files=payload_template('b','0','Хую хуюшки хуяк! #2.0','2chaptcha',rc.content[6:].decode('utf-8'),input('Введите капчу:\n')))
                return r.json()

def get_news(news_num=1):
	projects = []
	msg = "%s" % ("—"*31)

	r = requests.get('https://2ch.hk/news/')
	soup = BeautifulSoup(r.content, "html.parser")
	opposts = soup.find_all('div', {"class": "post oppost"})
	for oppost in opposts[:news_num]:
		try:
			post_title = re.sub(r"\n","",str(oppost.find('span', {"class": "post-title"}).get_text()))
		except:
			pass
		post_message = re.sub(r"\n","",str(oppost.find('blockquote', {"class": "post-message"}).get_text(' '))[:436])
		reflink = str(oppost.find('span', {"class": "reflink"}).a.get("href"))
		msg += "\n%s\n\n%s...\n\nСсылка на новость: https://2ch.hk%s\n%s" % (post_title, post_message, reflink,"—"*31)
	return msg

@client.event
def on_message(message):
    # we do not want the bot to reply to itself
    if message.author == client.user:
        return

    if message.content.startswith('!news') and message.channel.id == ChannelID:
        try:
                if message.content[6].isdigit() and int(message.content[6]) <= 3:
                        news_num=int(message.content[6])
                        client.send_message(message.channel, get_news(news_num))
                else:
                        raise ValueError
        except:
                client.send_message(message.channel, "Ошибка!\nСинтаксис команды: !news[<кол-во последних новостей>]\nКол-во новостей не может быть больше 3)")

@client.event
def on_ready():
    print('Logged in as')
    print(client.user.name)
    print(client.user.id)
    print('------')
    #client.send_message(discord.Channel(id='101868866954604544'), 'test')
    #client.accept_invite("https://discord.gg/0j97IHAliTzoVIzz")
    '''for server in client.servers:
        print(server.name + ": " + server.id)
    client.send_message(discord.Channel(id='84319995256905728'), 'test msg2')
'''
client.run()
